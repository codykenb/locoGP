#!/bin/bash

# Takes numerous directories, creates an R script to compare the average of best fitnesses

gpVersions=( $@ )
#baseResultsDir="archive"
origDir=`pwd`

outFileName=$(for dir in ${gpVersions[@]}; do echo -n $dir- ; done)"vs"
#echo "Drawing comparison graph for ${gpVersions[@]}"

# ----------------------------------- generate R script
#cd $baseResultsDir

for gpVer in "${gpVersions[@]}" # These are results directories ( which each contain many run repition directories )
do
    gpVerTrimmed=`echo $gpVer | tr -d '-' `
    finalString=$gpVerTrimmed"allmin <- rbind("
    fCount=0
    # get results files from all repition directories
    resultFileList=`find $gpVer/rep*/allfitness.txt`
    for resultFile in $resultFileList
    do 
#	echo "$gpVer$fCount <- read.table(file=\"$resultFile\", header=FALSE, nrows = 250 )" 
	echo "$gpVerTrimmed$fCount <- read.table(file=\"$resultFile\", header=FALSE, nrows = 100 )" 
	echo $gpVerTrimmed$fCount"min <- apply($gpVerTrimmed$fCount, 2, min)" 
#	finalString+="head("$gpVer$fCount"min,n=100),"
	if [ "$fCount" -eq "0" ]
	then
	    finalString+=$gpVerTrimmed$fCount"min"
	else
	    finalString+=","$gpVerTrimmed$fCount"min"
	fi
	((fCount++)) 
    done
    
    finalString+=")"
    echo $finalString 
    echo $gpVerTrimmed"allminAvg <- apply("$gpVerTrimmed"allmin, 2, mean)"
done

#echo "library('tikzDevice')" 
#echo "postscript(\""$outFileName".eps\")" 

# TODO before plotting, get the min/max for all data sets so the graph can accomodate all without wasting space
# find the ylim from all data sets                                                                                                
ylimLine=""
ylimLine+="ylimvals <- c("
gpVerTrimmed=`echo ${gpVersions[0]} | tr -d '-' `
ylimLine+="min("$gpVerTrimmed"allminAvg"
for gpVer in "${gpVersions[@]:1}"
do
    gpVerTrimmed=`echo $gpVer | tr -d '-' `
    ylimLine+=","$gpVerTrimmed"allminAvg"
done
gpVerTrimmed=`echo ${gpVersions[0]} | tr -d '-' `
ylimLine+="),max("$gpVerTrimmed"allminAvg"
for gpVer in "${gpVersions[@]:1}"
do
    gpVerTrimmed=`echo $gpVer | tr -d '-' `
    ylimLine+=","$gpVerTrimmed"allminAvg"
done
ylimLine+="))"
echo $ylimLine

echo "pdf(\""$outFileName".pdf\")" 
gpVerTrimmed=`echo ${gpVersions[0]} | tr -d '-' `
echo "plot("$gpVerTrimmed"allminAvg, xlab=\"Generation No.\", ylab=\"Fitness (Normalised)\", pch=c(0), ylim=ylimvals)"
echo "title(main=\"Minimum (best) values for multiple runs, averaged\")" #${gpVersions[0]}\")"
#echo "mtext(\"Minimum (best) values for multiple runs, averaged\")"
echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
pch=1
for gpVer in "${gpVersions[@]:1}" # all remaining elements in the array are done with points
do
    gpVerTrimmed=`echo $gpVer | tr -d '-' `
    echo "points("$gpVerTrimmed"allminAvg, xlab=\"Generation No.\", ylab=\"Fitness (Normalised)\", pch=c("$pch"))"
    echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
    pch=$(( $pch + 1 ))
#    echo "title(main=\"$gpVer\")"
#    echo "mtext(\"Minimum (best) values for multiple runs, averaged\")"
#    echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
done
echo "par(mar=c(0, 0, 0, 0))"
echo "legend('topright',c(\"${gpVersions[0]}\""
for gpVer in "${gpVersions[@]:1}"
do
    echo -n ",\"$gpVer\""
done
echo -n "),pch=c(" #'.','o'),y.intersp=1.7)"
echo -n "0"
pch=1
for gpVer in "${gpVersions[@]:1}"
do
    echo -n ",$pch"
    pch=$(( $pch + 1 ))
done
echo -n "),bty='n')" #,y.intersp=1.7)" 
echo " "
echo "dev.off()"
#cd $origDir

############ Copy and pasted from above to produce tex graph ########################


echo "library('tikzDevice')"
echo "tikz(\""$outFileName".tex\")" 
gpVerTrimmed=`echo ${gpVersions[0]} | tr -d '-' `
echo "plot("$gpVerTrimmed"allminAvg, xlab=\"Generation No.\", ylab=\"Fitness (Normalised)\", pch=c(0), ylim=ylimvals)"
echo "title(main=\"Minimum (best) values for multiple runs, averaged\")" #${gpVersions[0]}\")"
#echo "mtext(\"Minimum (best) values for multiple runs, averaged\")"
echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
pch=1
for gpVer in "${gpVersions[@]:1}" # all remaining elements in the array are done with points
do
    gpVerTrimmed=`echo $gpVer | tr -d '-' `
    echo "points("$gpVerTrimmed"allminAvg, xlab=\"Generation No.\", ylab=\"Fitness (Normalised)\", pch=c("$pch"))"
    echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
    pch=$(( $pch + 1 ))
#    echo "title(main=\"$gpVer\")"
#    echo "mtext(\"Minimum (best) values for multiple runs, averaged\")"
#    echo "lines("$gpVerTrimmed"allminAvg, type=\"c\")"
done
echo "par(mar=c(0, 0, 0, 0))"
echo "legend('topright',c(\"${gpVersions[0]}\""
for gpVer in "${gpVersions[@]:1}"
do
    echo -n ",\"$gpVer\""
done
echo -n "),pch=c(" #'.','o'),y.intersp=1.7)"
echo -n "0"
pch=1
for gpVer in "${gpVersions[@]:1}"
do
    echo -n ",$pch"
    pch=$(( $pch + 1 ))
done
echo -n "),bty='n')" #,y.intersp=1.7)" 
echo " "
echo "dev.off()"
#cd $origDir

