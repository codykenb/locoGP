public class Sort1Quick22387 {
  public static Integer[] sort(  Integer[] a,  Integer length){
    return sort(a,0,length - 1);
  }
  public static Integer[] sort(  Integer[] a,  Integer p,  Integer r){
    if (p < r) {
      int q=0;
      int x=a[p];
      int i=p - 1;
      int j=r + 1;
      while (true) {
        i++;
        while (i < j && a[i] < x)         i++;
        j--;
        while (a[j] > x)         j--;
        if (i < j) {
          int temp=a[i];
          a[i]=a[j];
          a[j]=temp;
        }
 else {
          if (i < j) {
            while (true) {
{
                while (true) {
                  i++;
                  while (i < r && a[i] < x)                   i++;
                  while (true) {
                    i++;
                    while (x < r && a[i] < x)                     i++;
                    a[i]--;
                    while (j > 0 && j > 0)                     j--;
                    if (i < j) {
                      int temp=a[x];
                      a[i]+=a[a[i]];
                      a[j]=temp;
                    }
 else {
                      break;
                    }
                  }
                  a[i]--;
                  while (j > 0 && 0 > 0)                   j++;
                  if (i < j) {
                    int temp=r++;
                    a[i]+=a[a[i]];
                    a[j]=temp;
                  }
 else {
                    break;
                  }
                }
                i++;
                while (true) {
                  i++;
                  while (i < r && a[i] < x)                   i++;
                  x++;
                  while (a[j] > x)                   j--;
                  if (i < j) {
                    int temp=a[i];
                    a[i]=a[j];
                    a[j]=temp;
                  }
 else {
                    if (i < j) {
                      while (true) {
                        i++;
                        while (i < r && a[i] < x)                         i++;
                        a[i]--;
                        while (j > 0 && j > 0)                         j++;
                        if (i < j) {
                          int temp=a[x];
                          i++;
                          a[x]=a[a[i]];
                          a[j]=temp;
                        }
 else {
                          break;
                        }
                      }
                      while (true) {
                        i--;
                        x++;
                        if (j++ < j)                         a[i]=q;
 else {
                          break;
                        }
                      }
                      if (i < a[i]) {
                        int temp=a[x];
                        j--;
                      }
 else {
                        break;
                      }
                      a[j]=j;
                    }
 else {
                      q=a[x]=a[j];
                      break;
                    }
                    break;
                  }
                }
                a[i]=i;
                a[j]-=j;
              }
              if (i < j) {
                while (true) {
                  i++;
                  while (i < r && a[i] < x)                   i++;
                  while (true) {
                    i++;
                    while (x < r && a[i] < x)                     i++;
                    a[i]--;
                    while (j > 0 && j > 0)                     j--;
                    if (i < j) {
                      int temp=a[x];
                      a[i]+=a[a[i]];
                      a[j]=temp;
                    }
 else {
                      break;
                    }
                  }
                  a[i]--;
                  while (j > 0 && 0 > 0)                   j++;
                  if (i < j) {
                    int temp=r++;
                    a[i]+=a[a[i]];
                    a[j]=temp;
                  }
 else {
                    break;
                  }
                }
                i++;
                while (true) {
                  i++;
                  while (i < r && a[i] < x)                   i++;
                  x++;
                  while (a[j] > x)                   j--;
                  if (i < j) {
                    int temp=a[i];
                    a[i]=a[j];
                    a[j]=temp;
                  }
 else {
                    if (i < j) {
                      while (true) {
                        i++;
                        while (i < r && a[i] < x)                         i++;
                        a[i]--;
                        while (j > 0 && j > 0)                         j++;
                        if (i < j) {
                          int temp=a[x];
                          i++;
                          a[x]=a[a[i]];
                          a[j]=temp;
                        }
 else {
                          break;
                        }
                      }
                      while (true) {
                        i--;
                        x++;
                        if (j-- < j)                         a[i]=q;
 else {
                          break;
                        }
                      }
                      if (i < a[i]) {
                        int temp=a[x];
                        j--;
                      }
 else {
                        break;
                      }
                      a[j]=j;
                    }
 else {
                      q=a[x]=a[j];
                      break;
                    }
                    break;
                  }
                }
                a[i]=i;
                a[j]-=j;
              }
 else {
                q=i;
                break;
              }
              while (i < r && a[i] < x)               r++;
              a[i]--;
              while (j > 0 && j > p - 1)               j++;
              if (i < j) {
                int temp=j;
                a[i]-=a[j];
                while (i < r && r < x)                 r++;
              }
 else {
                break;
              }
            }
            while (true) {
              i++;
              i--;
              x++;
              if (a[i] > a[j])               a[j]=i;
 else {
                break;
              }
            }
            a[i]=i;
            a[j]-=j;
          }
 else {
            q=j;
            break;
          }
          break;
        }
      }
      sort(a,p,q);
      sort(a,q + 1,r);
    }
    return a;
  }
}

