package locoGP.problems;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Random;

import org.eclipse.jdt.core.dom.ASTNode;
import org.eclipse.jdt.core.dom.PostfixExpression;

import locoGP.individual.Individual;
import locoGP.operators.GPASTNodeData;
import locoGP.problems.tests.SortTestCase;
import locoGP.problems.tests.TestCase;
import locoGP.util.gpDataSetterVisitor;

public class Sort1Problem extends Problem{

	protected String problemName = "Sort1ProblemTest";
	protected String className = "Sort1ProblemTest";
	protected String methodName = "sort";

	@Override
	public String getMethodSignature() {
		return "public static java.lang.Integer[] sort(java.lang.Integer[] a,java.lang.Integer length)";
	}
	
	//" int i = 0; \n"+
	protected String problemString = "public class Sort1ProblemTest { \n" +
	"	  public static Integer[] sort(Integer []a , Integer length) { \n" +
	
	"   	for (int i = 0 ; i < length ; i++){ \n" +
	"			for ( int j = 0 ; j < length - 1 ; j ++){ \n" +
	"				if ( a [ j ] > a [ j +1]) \n" +
	"				{ \n" +
	"					int k = a [ j ]; \n" +
	"					a [ j ] = a [ j +1]; \n" +
	"					a [ j +1] = k ; \n" +
	"				} \n" +
	"			} \n" +
	"		} \n" +
	"	return a; \n" +
	"	} \n" +
	"} \n" ;
		
	private TestCase[] testData = createFixedCases();
	/*{ 
			createCaseTypeRandVals(0,10),
			createCaseTypeRandVals(1,10),
			createCaseTypeRandVals(2,10),
			createCaseTypeRandVals(0,500),
			createCaseTypeRandVals(1,500),
			createCaseTypeRandVals(2,500),
			createCaseTypeRandVals(0,1000),
			createCaseTypeRandVals(1,1000),
			
			 ReverseSorted GP92
			createCase(2,10),
			createCase(2,500),
			createCase(2,600),
			createCase(2,700),
			createCase(2,800),
			createCase(2,900),
			createCase(2,1000),
			
		}; 
	*/
	private Integer worstFunctionalityScore = null;
	
	public String getCodeListing(){
		return problemString;
	}
	
	public String getEntryClassName() {
		return className;
	}

	public String getMethodName() {
		return methodName;
	}
	public CompilationSet getStrings() {
		CompilationDetail[] fileSet = new CompilationDetail[1];
		fileSet[0] = new CompilationDetail(problemString,"",className);
		return new CompilationSet(fileSet);
	}
	
	public TestCase[] getTestData() {
		return testData;
	}
	
	public int getNumTests(){
		return testData.length;
	}
	
	public int sampleCall ( Object[] args )
	{
		sampleCall( (Integer[])args[0], (Integer)args[1] );
		return 0;
	}

	public void sampleCall ( Integer []a , Integer length ) 
		{ // todo use system sort here
		Arrays.sort(a);
		
/*		for ( int i = 0; i < length ; i++)
			for ( int j = 0 ; j < length - 1 ; j ++)
				if ( a [ j ] > a [ j +1])
				{
					int k = a [ j ];
					a [ j ] = a [ j +1];
					a [ j +1] = k ;
				}
*/		}
	
	private Integer[] createRandomIntArray(){
		Random ran = new Random();
		return createRandomIntArray(100 + ran.nextInt(900));
	}
	
	private Integer[] createRandomIntArray(int length){
		Random ran = new Random();
		Integer[] randomArray = new Integer[length];
		for(int i = 0 ; i< randomArray.length; i++)
			randomArray[i] = ran.nextInt();
		return randomArray;
	}

	private Integer[] createAlmostSortedArray(){
		Random ran = new Random();
		return createAlmostSortedArray(100 + ran.nextInt(900));
	}
	private Integer[] createAlmostSortedArray(int length){
		Random ran = new Random();
		Integer[] randomArray = new Integer[length];
		for(int i = 0 ; i< randomArray.length; i++)
			randomArray[i] = ran.nextInt( (100+(i) * 1000) );
		return randomArray;
	}
	
	private Integer[] createReverseSortedArray(){
		Random ran = new Random();
		return createReverseSortedArray(100 + ran.nextInt(900));
	}
	
	private Integer[] createReverseSortedArray(int length){
		Random ran = new Random();
		Integer[] randomArray = new Integer[length];
		for(int i = 0 ; i< randomArray.length; i++)
			randomArray[i] = 1000000 - (100 *i) + ran.nextInt( 100 );
		return randomArray;
	}
	
	/*private SortTestCase createCase(int caseType) { // 0 = random, 1 = almost sorted, 2 = reverse
		Integer[] testArr; 
		if(caseType ==0)
			testArr = createRandomIntArray();
		else if(caseType ==1 )
			testArr = createAlmostSortedArray();
		else
			testArr = createReverseSortedArray();
		
		//System.out.println("Creating test " + arrayPrinter(testArr));
		Integer[] ansArray = testArr.clone();
		sampleCall(ansArray, ansArray.length); // sort the sucka
		//System.out.println("Sorted " + arrayPrinter(ansArray));
		SortTestCase aCase = new SortTestCase(new Object[]{ testArr, (Integer)testArr.length}, ansArray);
		return aCase;
	}*/

	
	private SortTestCase createCaseTypeRandVals(int caseType, int caseLength) { // 0 = random, 1 = almost sorted, 2 = reverse
		Integer[] testArr; 
		if(caseType ==0)
			testArr = createRandomIntArray(caseLength);
		else if(caseType ==1 )
			testArr = createAlmostSortedArray(caseLength);
		else
			testArr = createReverseSortedArray(caseLength);
		
		printTestArray(testArr);
		
		return createCaseFromArray(testArr);
	}
	
	private SortTestCase[] createFixedCases(){
		 //create a bunch of test cases which have static values
		 // this should remove noise from results found.
		 
		/* these values were taken from a test run of:
			createCaseTypeRandVals(0,10),
			createCaseTypeRandVals(1,10),
			createCaseTypeRandVals(2,10),
			createCaseTypeRandVals(0,500),
			createCaseTypeRandVals(1,500),
			createCaseTypeRandVals(2,500),
			createCaseTypeRandVals(0,1000),
			createCaseTypeRandVals(1,1000),
		 */
		 
		Integer[][] testArrSet= {
				{-1935783155, 805693102, 1011599466, -368696979, 814152454, 1502428812, 1640419215, 879631257, -1555817806, -987937568},
				{1, 939, 950, 520, 3346, 3658, 2335, 6174, 2377, 796},
				{ 1000024, 999927, 999849, 999761, 999650, 999576, 999422, 999378, 999276, 999144},
				{1461621467, 1562251324, -1624210339, 1064011136, 445713582, -924470712, 1303507336, 67442901, 1383023942, 64006739, 572801916, -1868465647, 1239672391, 1669562471, 1903099010, -1241619485, 1489876619, -752352324, 880127546, -1696367460, 197079093, 780544313, -1018605618, 1401340506, -1139219451, 602787386, -1889778839, -2054613656, -1827258899, -1984732269, -1427325206, 1212581093, 269057764, -1885485867, -287274027, 1053573539, -1333985285, 1707327439, 1955091081, 1367366480, 1170018989, 758911063, 1030743224, 2141563867, 1739526778, -1544891318, 1539586834, -1364683504, -1240499274, -1746682928, -1053877693, -1127779195, -1334174819, -393709084, 1133744928, 678687161, -1472418389, -1744881389, 370528796, 1945668217, 237337130, 387258499, 1284239872, -809500283, 1468320268, -1268976330, 1461503450, 726831988, 833700858, -1650785392, 1185730102, 1610028500, 1473021612, -1533936362, 403230091, -433822572, 1283888251, 1850664568, -289361928, 1121042854, 2121524276, -1705201199, -1197688272, -914683168, 309537582, 102318380, 46281649, 1301801507, 568145053, -1678144182, 691798075, 680747966, -1425384919, 656602273, 2079251584, 1917019924, -1755418182, -1248069976, 1883779607, 934692219, -70957931, -21569711, -1468942666, -920243353, 1419174828, -1669519657, 516115104, 843134919, -981701327, 1175095737, 1909443164, -1980355154, -27060373, 2050170117, 1778436007, -690111434, 152343757, -1916804391, -662676054, -983537504, -51829436, -79584474, -814771089, -1154931008, 142141648, 1278348471, -1873082479, -226096233, -512276650, 1746362993, -20528077, 508495425, 37519795, 1994340572, -1262120397, -1375419631, 137281556, -2081880095, 1176444062, -1873273606, 2004693380, 1736545493, -1093948059, 1517076784, 1689587910, 689731766, -490508207, -97523442, 1692508772, -1918286157, 1116369204, -1404678598, 1449492487, 523638513, 1757530464, 1352842502, 1489814793, -169248372, 2090446941, -1912018663, -1245908920, 1920603611, -360225835, -2099877810, -1172271299, -1410568, 1667046099, 849737691, 167380556, -1447829890, -1458472916, 50294709, -467006883, -1259150700, -1016647620, -1618409421, -81027158, -1831500758, -595798571, -1638607375, -175066662, 280615042, -380108171, 1898946550, -1574463153, 56707314, -1812050506, 931427353, 1365451195, 915691495, 2128726026, 532323744, 1294198265, -707841491, -1014109018, 1563025961, -627370726, -45117332, -1948434754, -1826936627, -1393822531, -1587499787, 1422853619, -1542852735, -474827613, 1951027646, -6824439, 1757229760, 602695553, 638861995, 2013203933, 588557158, -1524288232, 77563919, -1043998315, -422476065, 495917442, 715873649, -2131409895, 1836055936, -822819377, -1720465262, 230814657, 999910196, -375294512, -1762386770, 1400712782, -317927846, 1922027314, -893915646, -972742626, 1364578542, -1799414323, -389465714, -1047141733, -1903640602, 330268990, 1576191260, -2130709004, 834409694, -1678057550, -1099302016, 1163928080, 1163818486, 671724037, -1864120032, 1270870718, -1374531589, 658504971, 361512118, 801456944, 229011140, -1359999956, -1978601388, -2113237847, -1017825314, -1423589067, 151682728, -1138693003, -1226151061, -751399571, -74348415, -1495788262, -66482362, 1882154983, 1322258065, 2021105356, -238196629, -1157933802, 2091393908, -614962395, -476371306, -2102242394, 1871002096, 419696661, -796252631, -1037450615, 1593676670, 1844149782, 2037083218, -69430193, -1187146999, 488986020, 680149356, 1574101946, -863045643, -38297620, 1945210278, 1771421073, 954877282, -1560813885, 160947170, -810208332, -878650959, -624449575, 244197087, 1479806320, -1693287866, 1713585966, -848571239, -1567774444, 1581864847, -1646598972, 250905583, -1505762620, -1333539515, 765905301, 412782726, -1593043828, 1399022322, 1850793927, -1454673683, 1472168888, 2012008626, -609289699, -2078190847, -1702572190, -2030236611, 266006192, -328754541, 331691083, -107765212, -373444385, -1927928249, -776357394, 1083367258, -1663199612, 1774288574, 1413061842, -157643019, 1521433704, -700689417, 1666484767, 363483190, -978600456, -553063182, -1793294220, 1770309830, 325465144, -1115722346, 1257007607, 933050178, -2012893193, -1049094444, 2109064108, 434973177, 438838083, -979966709, -290396662, 1537760756, -1786384865, -1387777875, 326157003, 295766582, 1945436787, 1515468067, 1125395459, 2089753412, 182833987, -437673490, -2091124620, -1785650457, 912491299, 73243150, -1458661088, -1922695121, -1388050966, 1172424102, -192482274, 1632273339, -338941531, 928471520, -1563060047, -715746248, -1646871858, 930102030, 582525078, 1206490918, -1764935746, -2084725487, 1545589404, 342761954, 1471399775, -1856125442, 909630074, 163133152, 2037475109, 468768510, -867128868, -1043754185, -694647746, 2107031413, 1788892863, 569364578, 1132688391, 1245101669, -366671106, -1414504892, -119832638, -512551404, -1677862613, -1942185620, 1926788998, -1414408723, 29067938, 40927642, -1980628874, 432922275, -1096303909, 102159490, 2140869173, -1030650724, -1089350656, 1594724559, -432842855, 1062106252, -1684619073, 469837162, -438212962, -1208172961, -397318304, -1491808005, -742128740, -1853543845, -399556071, 1731392943, 1024975804, -193381243, 344303777, -953653956, -2973016, 431852100, -172384510, -1134958303, 1426775937, -1949219260, -459981389, 504597298, -1970227946, 279455389, -1039989019, -1335532973, -1080491695, 1471809843, 1704508701, 444196739, 798044148, 339606111, 669028098, -997320932, 1163426949, 45908430, 1290316920, -42737064, -478748793, -981509719, 1267636460, -1089751785, -2101798166, 857928694, -1350775055, -324398114, 857512387, -135237059, 606505228, 841651746, 1382881087, 2079126382, -1351171125, 2126627015, 1268859093, 922049537, 816106779, -139229981, -1188902982, -1207174049, 1542583515, -1255381306, 1442944410, 124762496, -63360340, 1926730046, -1109845884, -93676588, -1468869366, -424912618, -1138107867, -163583897, 316378528, -1089342240, -111618504, 1266690111, -225481001, 1981836532, 11093053, 915128840, 1818144431, -1900935240, -1365456792, 57870835},
				{3, 267, 540, 1903, 307, 46, 4343, 4471, 3835, 4019, 1108, 10728, 10320, 2890, 997, 6176, 217, 10834, 7252, 3943, 4191, 4939, 4645, 7571, 1522, 1592, 15484, 9673, 27106, 1631, 25646, 9613, 26527, 12641, 27290, 8690, 23491, 13292, 23556, 8262, 19523, 35183, 18296, 29439, 9694, 6716, 27257, 16342, 5149, 21629, 5301, 35039, 24251, 32198, 20716, 38863, 53801, 4020, 42847, 27234, 10985, 19838, 47256, 42841, 5001, 11404, 37741, 17631, 6715, 13152, 43819, 9448, 66801, 7506, 881, 19927, 14464, 76749, 75709, 11537, 71762, 8564, 22442, 29603, 27292, 24068, 66728, 61452, 60812, 77603, 29666, 76045, 42519, 36474, 51479, 31595, 65453, 79492, 56607, 56271, 2615, 77718, 76313, 14749, 84450, 21395, 53194, 74526, 87683, 81221, 26756, 90831, 90189, 49271, 84806, 21247, 33827, 46210, 30728, 117222, 15035, 73331, 46587, 13285, 108704, 55827, 106639, 47762, 6337, 17853, 24677, 80193, 116011, 63817, 28148, 134245, 38741, 129863, 101996, 22836, 136971, 139351, 91030, 113813, 38492, 9060, 123863, 14040, 101553, 32204, 19332, 21609, 70959, 59255, 95475, 59991, 121124, 10480, 107284, 27928, 48511, 106700, 43615, 124397, 88191, 101554, 26170, 159940, 90123, 123172, 34994, 63306, 79143, 102533, 78668, 129152, 117862, 88465, 3510, 151925, 30388, 109125, 109288, 169761, 89248, 170723, 55861, 134346, 120583, 138418, 99495, 125868, 43339, 844, 98484, 81205, 61386, 175905, 32290, 138450, 20799, 78356, 52106, 91155, 132357, 175873, 115960, 200306, 4688, 110954, 187687, 149987, 167957, 26215, 70765, 93878, 153816, 103176, 47038, 110311, 57285, 104765, 45706, 92722, 78676, 79542, 28065, 92658, 200034, 69302, 12884, 145871, 10573, 157263, 112197, 15004, 204372, 233740, 156200, 39597, 169253, 2393, 31489, 109390, 6788, 152588, 160525, 158733, 221141, 239261, 239946, 81681, 88537, 109245, 43791, 170526, 200786, 157880, 6589, 4671, 124697, 112277, 179208, 164651, 121962, 48271, 7182, 16189, 160911, 118173, 195027, 19471, 180490, 154328, 149289, 158085, 215861, 72981, 11342, 11080, 223283, 87118, 69016, 151453, 243461, 206549, 63073, 245260, 45274, 241904, 117962, 272897, 167921, 27605, 54598, 7538, 180406, 131866, 69523, 193945, 207828, 190690, 216977, 109170, 63950, 254058, 116774, 201820, 292567, 109230, 110379, 193940, 181733, 287412, 190221, 197790, 312819, 204531, 185388, 67804, 30027, 224265, 276617, 221431, 54680, 85503, 31978, 299665, 293247, 48991, 27857, 18513, 296149, 319205, 301894, 86200, 102797, 316495, 147357, 198461, 94328, 44494, 40132, 292477, 72139, 198257, 208457, 9321, 223864, 172173, 78964, 9262, 56338, 252880, 314997, 149511, 315487, 93607, 56893, 156870, 171167, 285487, 330920, 56876, 315267, 265955, 51678, 241759, 36660, 335816, 342998, 298297, 275463, 132611, 138225, 182651, 240210, 295983, 344087, 17269, 113376, 318708, 57678, 206010, 181414, 202768, 91368, 353989, 336778, 203929, 98018, 214586, 172034, 369656, 247703, 311410, 102670, 241880, 197897, 73102, 375658, 311520, 21201, 15734, 172823, 35895, 122774, 4107, 392013, 215342, 307084, 233883, 300000, 279675, 284208, 306789, 229111, 343773, 54859, 277190, 107997, 32388, 242685, 48597, 9758, 318892, 258943, 259769, 178738, 68859, 300296, 326828, 333035, 169055, 272229, 419456, 352882, 166371, 14692, 214491, 18785, 308444, 299120, 301083, 435254, 134088, 188624, 214577, 259194, 235575, 23145, 303197, 130184, 110866, 114978, 363256, 318118, 160971, 59351, 80674, 266183, 14857, 127414, 32751, 322780, 283561, 229027, 328678, 8870, 236790, 244217, 150864, 454132, 284711, 315050, 261704, 313495, 286721, 384321, 19423, 469934, 356319, 168243, 340003, 284003, 417437, 467705, 353705, 60575, 475175, 407888, 292060, 443685, 107471, 45395, 470878, 355725, 359251, 49982, 198465},
				{1000028, 999921, 999859, 999741, 999616, 999511, 999499, 999314, 999259, 999125, 999053, 998912, 998868, 998719, 998643, 998518, 998471, 998337, 998244, 998113, 998097, 997932, 997826, 997755, 997606, 997595, 997443, 997353, 997240, 997107, 997050, 996965, 996877, 996733, 996671, 996551, 996497, 996327, 996207, 996142, 996069, 995900, 995837, 995764, 995680, 995530, 995459, 995398, 995220, 995118, 995061, 994937, 994889, 994705, 994601, 994557, 994435, 994397, 994246, 994124, 994097, 993976, 993823, 993772, 993687, 993559, 993405, 993311, 993292, 993131, 993001, 992952, 992885, 992768, 992641, 992567, 992455, 992338, 992221, 992109, 992051, 991985, 991862, 991705, 991649, 991598, 991427, 991308, 991267, 991175, 991028, 990964, 990876, 990761, 990688, 990533, 990469, 990340, 990210, 990189, 990078, 989977, 989856, 989760, 989654, 989509, 989413, 989316, 989222, 989152, 989002, 988947, 988885, 988734, 988608, 988505, 988495, 988345, 988236, 988122, 988086, 987957, 987831, 987760, 987613, 987541, 987445, 987326, 987255, 987130, 987038, 986911, 986808, 986751, 986625, 986518, 986489, 986363, 986289, 986116, 986073, 985924, 985808, 985745, 985629, 985557, 985470, 985344, 985221, 985139, 985020, 984945, 984829, 984761, 984660, 984585, 984463, 984338, 984238, 984188, 984014, 983952, 983812, 983728, 983616, 983518, 983498, 983370, 983241, 983191, 983068, 982926, 982868, 982734, 982629, 982509, 982452, 982351, 982266, 982127, 982068, 981952, 981836, 981799, 981643, 981589, 981442, 981342, 981248, 981134, 981076, 980927, 980845, 980714, 980645, 980590, 980487, 980309, 980200, 980136, 980018, 979960, 979891, 979735, 979615, 979541, 979468, 979388, 979264, 979159, 979069, 978969, 978888, 978779, 978670, 978586, 978492, 978312, 978279, 978167, 978074, 977934, 977821, 977712, 977648, 977537, 977493, 977357, 977289, 977110, 977092, 976949, 976865, 976795, 976637, 976535, 976406, 976367, 976281, 976138, 976012, 975985, 975830, 975771, 975657, 975578, 975448, 975393, 975297, 975151, 975080, 974902, 974898, 974757, 974699, 974557, 974404, 974316, 974283, 974190, 974006, 973919, 973837, 973711, 973689, 973566, 973451, 973337, 973241, 973198, 973016, 972928, 972881, 972706, 972699, 972564, 972447, 972323, 972261, 972191, 972022, 971917, 971868, 971792, 971613, 971581, 971448, 971383, 971297, 971123, 971068, 970977, 970814, 970785, 970679, 970527, 970443, 970391, 970213, 970129, 970052, 969971, 969878, 969708, 969657, 969528, 969469, 969341, 969234, 969155, 969065, 968998, 968850, 968718, 968633, 968520, 968465, 968392, 968242, 968163, 968086, 967999, 967888, 967701, 967637, 967504, 967406, 967369, 967218, 967145, 967014, 966924, 966814, 966769, 966613, 966548, 966412, 966362, 966287, 966153, 966077, 965953, 965828, 965733, 965649, 965526, 965476, 965312, 965215, 965171, 965065, 964943, 964827, 964742, 964694, 964586, 964442, 964339, 964294, 964198, 964030, 963973, 963847, 963758, 963617, 963570, 963479, 963398, 963265, 963141, 963051, 962981, 962886, 962747, 962679, 962572, 962435, 962382, 962264, 962140, 962075, 961918, 961887, 961769, 961644, 961578, 961447, 961345, 961227, 961164, 961000, 960956, 960872, 960797, 960648, 960510, 960451, 960336, 960207, 960171, 960008, 959991, 959810, 959736, 959683, 959551, 959400, 959319, 959277, 959100, 959046, 958933, 958869, 958752, 958621, 958511, 958438, 958331, 958235, 958190, 958042, 957909, 957846, 957764, 957659, 957555, 957433, 957397, 957233, 957100, 957021, 956992, 956830, 956759, 956631, 956523, 956486, 956334, 956249, 956114, 956031, 955943, 955894, 955734, 955692, 955575, 955468, 955359, 955201, 955123, 955029, 954904, 954808, 954703, 954686, 954551, 954436, 954323, 954257, 954182, 954028, 953981, 953841, 953715, 953658, 953501, 953420, 953338, 953273, 953120, 953049, 952944, 952880, 952728, 952663, 952528, 952486, 952333, 952231, 952167, 952083, 951984, 951806, 951724, 951666, 951553, 951419, 951367, 951234, 951131, 951024, 950942, 950854, 950753, 950643, 950578, 950468, 950301, 950266, 950180},
				{371811143, 837177895, 1284168878, 241441749, -1054105673, 1872619648, 1684173662, -1787828911, -1996537723, 1262867947, 1068580871, -610236466, 45663296, 1805646551, 51260914, 2121200804, 396960418, -1137680922, -1292784924, -672418845, -841971400, -87894593, -207393187, 45339711, -743588280, 1942027298, -525930209, -1406114232, -1176089106, 2089532988, -2114365203, -227150115, -1369315961, -1435689412, 828103828, 108838114, 1094025555, 1089206821, -65936338, 1371631152, -765374379, 1419045861, -701863515, -1427509299, 2049864318, 1961399975, 803233142, 1728599388, -1423444726, -1169099419, 336991159, 801760215, 914141480, 151289536, -1800667814, -779678854, 1749938400, -2133380589, -1632423501, 973376770, 1799945777, 157737413, -780104649, -1593491945, 942145657, -485404962, 414016133, 30351622, -661074919, 620227036, 1314854570, 1337836466, 1808697432, 809389255, 1358891424, 52894156, -1224825, -840056189, -1038044648, 242697793, 885861734, -390500508, 468441977, 12257268, -1669062714, 1938026247, 993874215, 169328045, -1292042897, -96437409, -1223656952, -349489840, -103061693, -774442738, -169301949, 826063441, -1756682333, -1370274571, -2145836726, -775153817, -1218730992, 975060750, 1849106970, -2019393665, -1234287339, -695824776, 1710318529, -1118531085, -1035405211, 46041811, -2126715872, 1147399675, -2066992833, -1545324851, -461441294, 941754723, -1856107751, 65951741, 475587340, -815972738, -1693289860, 1605548015, -1959161882, 1392264538, -139298771, 585556607, -300021927, 825986100, 289616525, -314706582, 120704938, 679682862, 919523650, 1926976801, -930324026, -1325191362, -1271347435, -1787077919, 1767456719, 1018173545, 1376792093, 1613778943, -393449513, 689366833, -673068515, 514017928, -367173910, -1726642868, 129846570, -1347567863, 585003089, 352966038, -826817903, -1692804182, -1146634987, 835049287, 1047479286, -660275071, 183486402, 2026260584, -583902016, -1405032156, -1806358420, -234062974, 665829300, 1715821440, -2075626250, -1999416167, -700894496, 789409768, 2067130769, -882728616, -756099655, -1718040976, -746416765, 1791180941, 1809196423, 1769618812, 145297449, 1145687254, 1848796161, 2061696403, 805173822, 2081734300, -1515568077, -651039112, -1117466787, 1341536577, -64945753, -430118533, 197249988, 1292957589, -588823100, -1257620212, 1249765978, -1426912371, -649429136, -444181104, -1019330829, -462396106, 332370173, 204119927, -1522519855, -1809165082, 80738369, -746064242, 719346029, -271549259, 2097075462, 788018833, -1981150345, 2096817451, -1026723419, 1616888068, 2091501084, 1011099962, -1929563668, -1222570942, -1600317306, 910552430, -651752376, -2083418155, 2084485544, 831067746, -18943712, 358654472, -803874757, 866022005, 1503380606, -699000133, 1142679299, 296471230, -890057228, 81252213, 1778149718, -1190883524, -1505770819, -1820181313, 317096926, 1847890514, 750833185, -1525550929, -991930979, 718702449, 532691998, -1096774974, -1677173455, -1699268330, 2077993540, 1158767855, -2010026407, 1122085367, -1223499040, 2138520056, -754320457, -442526344, -918108580, 452812034, 1724365015, -1598225564, 1853023973, -764127640, -446900113, 64283352, -378357170, 1028323787, 1154247400, 114811010, -1345485260, 347752813, 445096220, 1869474827, -787322271, 863746751, -837421215, -1729748783, 1090530677, -909725640, -1629057850, 1836058073, -246763581, 1573600359, 1380526748, -1684776700, -2004211592, 900563531, -781074377, 261282175, -1912696574, 1147553506, 1414616822, -2001877632, -946609490, 203589631, -1992572289, -842858706, -549844333, -1744491424, -1694396081, -971109152, -395462738, -2117394177, -342228623, 1114466442, 754804558, 1325627304, -1192166003, -243740045, -2098703438, -2104337717, -668375516, 735943467, -85251857, -749802861, -236704999, 2096175292, -1037523945, -1392945354, -1541342862, 339262239, -946175849, -1496855410, 475365727, 1307210737, -371632159, -140639511, -626747268, -388012698, -644851894, 1022134556, -1645298605, 680397949, 1390145588, -1821238306, -66471644, 1497389685, 304146031, 166370898, -368740121, -150113921, -639934244, -1302558747, -1035977071, 208009396, -994320301, -261170342, -110308970, 1719483209, -463322938, 1463745314, 1154571695, -1681357056, 526723238, 1221521136, 187566813, -428769823, 1398180485, 966389389, 1931907500, -919646422, -950264580, -1251588632, -1644539972, -741995645, -201528114, 340321904, -1073045380, -1800763275, -348951219, -650102362, -93880775, 2050787101, 1122347772, 1813055725, -2053722281, -1359998436, 836469877, -815165788, -699792419, -1545976111, -1637544564, -134478730, -1661114570, 1134886346, -1671331659, -226278672, -1849832907, -1607465354, 1484350114, 1522091603, -505009831, 1046342176, -1503347664, 493923499, 1320170322, 150301208, 1916833411, -914390753, -582331453, -60805838, -1350245009, 255518859, -1409472951, 211964020, 761211929, -1842838709, -1610181188, -731001078, -28661794, 92510297, 1030826932, -1292896899, 167460210, 797007258, -376286130, -47819740, 2068636748, -232722060, -230516176, 1651238106, 975989825, -1073161821, 328146633, 566646768, -1718322833, -373482675, 2077479645, -377045915, 235133532, 1083588691, -551406784, 1682962260, -1082090402, -1970086423, 1859161569, 1892204205, 1569555004, -509448088, 759829258, -1553593561, -374488811, 597794914, 1224226533, 118895989, -2140330112, 724387063, -543021247, -1721486665, 799085300, 1441970022, -1104717418, -332553165, -185018518, 1752779750, -1689881274, -780292540, 1211792704, -1026948170, -1351475675, 1489619602, 1928526176, 35114099, -339123397, 2129463682, 707740577, 450617513, -144583224, 1192326896, -934940820, 33496491, 1349356679, -109144549, 1796156066, -1948097882, -962095305, -1455478560, -2006759747, -89830156, 303408726, 33535531, 227946549, 455861677, -1529484497, -1884650582, 1227388964, -279374716, 1553757207, -128125246, 105698348, -184751153, 1223919859, -90337082, -496289640, -1454169625, -91829252, -596051354, -608636735, 434064305, 1710826182, 2006962789, -410035790, 439987324, 1044491133, 1241920398, 1839276815, 473476878, 931938930, 891364840, 1556625970, 168844281, 408837077, -1628606680, 488948630, -775790286, 327759300, -357665178, 2078787192, 1406041827, 377398916, 587935508, 1168797371, -172200577, -2060580083, -820363477, 920455435, 1628803351, 182655435, 1464718502, 887561541, -1175056916, 2130222498, -649929165, 138693398, 1791103556, 1758289203, -1988191448, -1770009374, 772106625, 9024093, -1285507405, -1934965530, 1095806062, -165112314, 1765761621, -1777878880, 893952732, 639575067, 470164369, 1365761645, 89238125, 1328143316, -1576580896, -799202956, 2106209967, -143187908, -348440089, 1076756418, 1164230252, -589644560, 1831343851, -1952012618, -1990022593, 1949201190, -1788912764, 280293791, 1819744362, 1270862577, -1507428208, -1821167965, 1790020071, 1273750722, -793077398, 874499554, 1212009660, 1141729074, 720308316, -2067898662, 986167187, 1760208126, -169286063, -1073709044, -1255765367, 555493201, 951200207, 1272685792, -1222833851, -206190519, -829875933, -115681851, 708354637, -1441797709, 91272157, 344575644, -1431619692, -1087974375, -925253762, 1078533974, -190817194, 1508016639, 226716527, -223268133, -179823576, 469326696, -231882699, 1311006765, 1876860746, -1723554401, 1806126563, 411986381, 328810559, -343561421, -1386033713, -598601891, 1826023071, 1762058306, 425241480, -2058644090, 58374955, 1769244410, -708597497, 362375195, 1194690850, 1610389597, 612831779, -1253426562, 1106469074, -1937902269, -503303350, 1747077698, -571977871, -1953815643, -1091827858, 60794897, 1762672685, 243604504, -1507503812, -1619023152, -1063036287, -1235817578, -1970367597, 444985600, -1522437687, 614673796, -2034328269, 2120717415, 1772902936, -725573137, -1371694155, 113472495, -753781175, -1343003623, 1250683322, 1782233037, 1214649171, -618363596, 202050663, 1078653925, -1755945758, 942804845, 997495824, 482184300, -1235863774, 235779371, 1796330546, 1083588815, 757541341, 1367388312, -224221529, -1163591469, -1382053689, -254830753, -2062504428, 226324476, -162982632, 652289719, -17839195, 534297395, 1026184283, 1396132769, -1348224004, 1972151458, 332757126, -1019614355, -1878126746, -1400051230, 1140143433, -1555615615, 1210511695, -1726322600, 1849759402, 1526030173, 1947628280, 1620419547, -230150959, -1808893991, 546000230, -1046441062, -1659231968, 1217275569, 6770333, -1667901123, -322697082, 1609485123, -358029810, 1998177865, 269977365, -1499818602, -235109299, 1928057800, -1299703599, 1700921502, 114803206, 962949160, -1269591094, 1915301053, -324304335, 209536867, 350762860, -1466835315, 702120836, 1106536800, 298573076, -394254884, 65869097, 1204089496, 611130855, -946605833, 90038961, 943725308, -2038398497, 1670516779, -1558246585, 1656999702, -199685082, 1247505800, 2108422184, -775014546, -708003674, 1354333416, 1046980178, 850907694, -114639136, -801953745, -29730949, -322764023, -1143820803, -41042989, 1889852996, 649739607, -1697073630, -2116970594, 775944622, -767284092, -1777028344, -555571278, -1911458868, 346521259, -1161901109, 1530456526, -1652033606, -198298243, 2073410561, -1505393970, 1049219789, -1712152217, -1678239219, 1423255672, 17962251, -1478595852, 1343958709, -225909899, 1704641757, -1404678545, -1809894926, 797601180, 1045043715, 370372044, 2003435783, -1473138570, 2042885063, -803906361, 1588502997, -1415239682, -757072267, -702133427, -828823700, 114765224, 1872247817, 1300034075, -1065628699, 1054764964, 512418858, 1897801125, 2060669806, 1623726179, -2002399401, -1508232392, 1715866789, -236557735, -1287593633, 1465936994, -299761110, -226044923, -1454364906, -2135587695, -1902890641, -366559186, 397253445, -1442863879, 1008458449, -1209096594, 1409664738, 971332283, 475676396, 1219436532, 1458679936, -1762999485, 2039504170, 1158939780, 192663304, 1258986225, 622954397, 1937626050, 1341453225, -310439430, 1804263439, -1724780880, -1462149363, -1018655856, -357756330, -1835637387, -170560052, -12670143, 994500587, -1707713184, 637323301, 542790812, 1968459965, 110646059, -1707253525, -693272295, 1039113539, 1740619139, 2000981948, -278392774, -1316084272, -490220601, -374758791, 1284961773, 541395754, -56787696, 1401307633, -1069716684, 140917852, 12233585, 2028692959, -1975646969, -276820534, -1507481729, 874320918, 528733560, -405361274, 404426771, -1569825030, 356121368, -1978660638, -1326345650, 1782208306, 2128757401, -1790970042, 1630707164, -116530021, -1744716108, -66339261, 1255381373, -505300353, 740588108, -243711257, -1389405247, -981279994, 946317523, 745503826, 35122194, 238771692, -1161037587, -1959593079, -1957376009, -625709453, 1938287954, 159554698, 2053269654, -2044349285, -1918083080, 2040902815, 109782139, -1938449007, 619418480, 335434231, -407139945, 187774820, -2139785584, -20488078, -1023517814, -1149660162, -1797128623, -1043347525, -1600232924, 275769169, 189577723, -578759013, -943746007, -1198992176, 676529535, -1299214452, -1608930732, 1505927200, -1663533533, -1516393843, 211443358, 943797519, -1836343964, 419979316, 559274943, -141673788, 1365155351, -193965559, -124772108, -1343576520, 935792592, 241640464, -1777181181, -1241350172, -1613185912, -832267353, 1504414588, 992661692, -982072199, -1125230702, 434881344, 308079195, 270537804, -1023773356, 52305223, -1717469570, -477456010, 1900459968, 746394781, -338609738, -1886201633, -2115829042, 718911660, -357051047, 1211878340, -1429782350, -324129087, 1895945401, -2083182883, -449182678, -736606264, -1926471272, 1713139649, 877558807, 1203842650, 1043463130, 1301251209, 974490703, 277049593, -282726276, 1651341748, 679944113, -1896813414, 1000065989, -2025000374, -1108998279, -1511105693, 718748346, -174525, -2051933228, -1364030540, -1902899242, -287667416, -597651018, -1294761109, 50159354, -1324281094, -1638974997, -756280476, -614079326, -1848986285, -1225941652, 1074306878, 834874457, 286922443, 1161882355, -1682825884, 688925294, -2013404515, -472520239, 1247449931, 64175336},
				{77, 155, 1198, 2009, 1754, 4737, 1344, 1906, 289, 2705, 3250, 2418, 406, 12542, 10531, 12485, 3550, 13176, 8243, 2569, 5551, 2743, 3371, 3362, 4062, 17142, 6384, 127, 19132, 9169, 13608, 25875, 15790, 8616, 13210, 8425, 14708, 26730, 24533, 3743, 19292, 23855, 17624, 22839, 33257, 20369, 18181, 30961, 13919, 32773, 46525, 45501, 15874, 5796, 30869, 28837, 28824, 9384, 3391, 11067, 4459, 44818, 16386, 25753, 57792, 8377, 19739, 4618, 43333, 22348, 55261, 29976, 47422, 28282, 24826, 74560, 11965, 69727, 69809, 59158, 72847, 40096, 75823, 35755, 83823, 11932, 9737, 43810, 67714, 10017, 57183, 15602, 67365, 4818, 49221, 37230, 1152, 51955, 77199, 92250, 85743, 25891, 45014, 100630, 91111, 36091, 24986, 54029, 33406, 97195, 33551, 2216, 41140, 66594, 79125, 27615, 73927, 56743, 101544, 43297, 92810, 66862, 54244, 8175, 84286, 97050, 105106, 77602, 63053, 6769, 46424, 119058, 39697, 32511, 105560, 37084, 106354, 63497, 94277, 109832, 98812, 137757, 14517, 46220, 125976, 7982, 126855, 105924, 116248, 115561, 105441, 96706, 82338, 111999, 74418, 127500, 71414, 28923, 63395, 141438, 34317, 30012, 126387, 120630, 123023, 120624, 161654, 6194, 104024, 62893, 155610, 104687, 1311, 143985, 104693, 61021, 51495, 101329, 104044, 49448, 47168, 104074, 147785, 111314, 157478, 67987, 93741, 103915, 186249, 159191, 26747, 67657, 99466, 31928, 182320, 146866, 113557, 128102, 149452, 108988, 38320, 70962, 93095, 185104, 23759, 174875, 64251, 177471, 91318, 11262, 39546, 49961, 108066, 158502, 7099, 119720, 111427, 56522, 129004, 106929, 118852, 213204, 10183, 150179, 181392, 225000, 188980, 120793, 43124, 28549, 64123, 123175, 131539, 145260, 223059, 35645, 164965, 110555, 45994, 45498, 222641, 133553, 14544, 97727, 186934, 60885, 134363, 139788, 103309, 102665, 227329, 67398, 57658, 27052, 43962, 224076, 5452, 25580, 229841, 108964, 74250, 235665, 135834, 53274, 54657, 220345, 106537, 48626, 267596, 86401, 139590, 78491, 43368, 71648, 132989, 36076, 108512, 79159, 90358, 234095, 172376, 251332, 105643, 121970, 276578, 51977, 236685, 165293, 183718, 198293, 88219, 264679, 279117, 266043, 157925, 107805, 282413, 180143, 231335, 110477, 174844, 17777, 138624, 46200, 176862, 152093, 14714, 38982, 113844, 194344, 307563, 157440, 58879, 112118, 181789, 261988, 31530, 57977, 152243, 242957, 129470, 261871, 268640, 108514, 187628, 244633, 318241, 264696, 314932, 202450, 28019, 100472, 270105, 23875, 39275, 94936, 114544, 255196, 50508, 145446, 51491, 102896, 78879, 301195, 327403, 229147, 69468, 311737, 190633, 97466, 119000, 275524, 165519, 170765, 325815, 52024, 291935, 143064, 80690, 74004, 145614, 174955, 249967, 149876, 29519, 312635, 199492, 28252, 65753, 212642, 299765, 303620, 58047, 210596, 224245, 167864, 372716, 261288, 281753, 35417, 358344, 90930, 219985, 309319, 236594, 77447, 253079, 302443, 356578, 305032, 150626, 75616, 251402, 30933, 172149, 70117, 321894, 93565, 88726, 109338, 301606, 176482, 255502, 34352, 90338, 195138, 163025, 304604, 106553, 282601, 296514, 356500, 180365, 253143, 245557, 90429, 201258, 389731, 320886, 98009, 281177, 53921, 274511, 370185, 86517, 105077, 118334, 306171, 156215, 255037, 96461, 374157, 220027, 298037, 276143, 206389, 162983, 148759, 419360, 187730, 360871, 359097, 233556, 206862, 424830, 261532, 302320, 336974, 420568, 113522, 441502, 94799, 443437, 383620, 100193, 452673, 143379, 404070, 435602, 147565, 279300, 21439, 216054, 54269, 371604, 225227, 342828, 264241, 199026, 94976, 166709, 11994, 181989, 249137, 197535, 445314, 183217, 34428, 37183, 378983, 63328, 244662, 280573, 257572, 321901, 188907, 69243, 67870, 59239, 219237, 147993, 32512, 154387, 193291, 267724, 95671, 280384, 175551, 386844, 443930, 154251, 185991, 358837, 441053, 430668, 181640, 332743, 409185, 98844, 424561, 396054, 421002, 381797, 499435, 401525, 383478, 282184, 463879, 280549, 417907, 195054, 268638, 318531, 428240, 12931, 326694, 290104, 166010, 475256, 188253, 467413, 309397, 3307, 44089, 531215, 252598, 56076, 389719, 404139, 169371, 338430, 224698, 377928, 15765, 168425, 203217, 412855, 53183, 412900, 365957, 319700, 245521, 42856, 24348, 283299, 302773, 432456, 190450, 41685, 323274, 86687, 113742, 146214, 343409, 54396, 14571, 21279, 99529, 532293, 94753, 317481, 366736, 72748, 275535, 68269, 201820, 353485, 100542, 543087, 60292, 341988, 471175, 353915, 525790, 581388, 166012, 422755, 480647, 78195, 87104, 16227, 561543, 257274, 571586, 285866, 112916, 126220, 52239, 75266, 120498, 102650, 351459, 590404, 296859, 64644, 222107, 238537, 204553, 507860, 457417, 284933, 184069, 337573, 413407, 119475, 545480, 125619, 258709, 192313, 71069, 383414, 58849, 77967, 449478, 51249, 462468, 606334, 532608, 437198, 351735, 7624, 612482, 478255, 272753, 331599, 423965, 170791, 115772, 183897, 386246, 34352, 354948, 54765, 573017, 509117, 478667, 51599, 286927, 622421, 584967, 61855, 252484, 54879, 24231, 344272, 189158, 196783, 595624, 606659, 654862, 263890, 456353, 269675, 638736, 579818, 375190, 114815, 636930, 418970, 644229, 641869, 443318, 361314, 158803, 560531, 282877, 489734, 339765, 425475, 515985, 150341, 205016, 121627, 572468, 127324, 244987, 178671, 10623, 659401, 21672, 13091, 360669, 549280, 530379, 219605, 230772, 672073, 690110, 155425, 631262, 333872, 543350, 554840, 520050, 89989, 92767, 132450, 628846, 199459, 445903, 80132, 59168, 418876, 69305, 78182, 80429, 179339, 126938, 274967, 26502, 211355, 720381, 609667, 311267, 671440, 41739, 661190, 86671, 456557, 250074, 231367, 67885, 496085, 199355, 487486, 227644, 356074, 117199, 320992, 397378, 363891, 650707, 489957, 167723, 730142, 243988, 62457, 411090, 736967, 82894, 693708, 371250, 692844, 650306, 313639, 48618, 135991, 753731, 662401, 204163, 523445, 316617, 315838, 653178, 618001, 193448, 544368, 642126, 42609, 729696, 233883, 625701, 635873, 654499, 601571, 373987, 136198, 581325, 369582, 347781, 773269, 522229, 242879, 254867, 229553, 48872, 43431, 405299, 167815, 19213, 522910, 34454, 396894, 598316, 279078, 28670, 352264, 608697, 562837, 776312, 484513, 215926, 680957, 377533, 388494, 796373, 126441, 596967, 561809, 636716, 734098, 512852, 617959, 351021, 53475, 95533, 343138, 229450, 481503, 654578, 117022, 791975, 796966, 360508, 822212, 376951, 209903, 693593, 146179, 566622, 725265, 292032, 545119, 662188, 731364, 94172, 317059, 600804, 740603, 316259, 532282, 387535, 479281, 179063, 778299, 302240, 666045, 774921, 413106, 737930, 235910, 25503, 431335, 367424, 346412, 819375, 189522, 310873, 631705, 448391, 565757, 752823, 837, 224828, 781195, 611903, 813493, 95943, 86689, 275975, 163466, 746267, 614367, 628745, 435638, 270080, 4059, 715788, 271220, 640822, 97434, 198968, 585306, 359625, 224962, 608339, 849444, 317145, 643009, 656603, 190684, 644027, 216337, 205828, 200608, 329835, 98442, 821104, 117054, 453458, 613664, 589929, 752759, 429837, 807344, 136671, 2697, 489245, 841199, 724284, 840460, 731910, 687569, 677526, 813689, 126623, 379306, 510395, 39861, 299353, 913448, 528747, 350175, 737441, 54729, 310875, 893893, 242483, 30877, 381197, 162732, 246276, 841182, 93689, 13860, 629059, 418752, 544387, 317283, 480340, 367308, 39794, 197952, 43993, 814688, 742345, 608019, 239655, 610856, 100301, 815852, 933501, 240961, 720396, 587269, 698244, 946922, 842681, 601215, 174524, 108118, 449116, 942099, 377734, 954613, 236141, 37989, 150347, 950286, 123937, 301882, 607600, 344742, 159309, 686672, 924532, 972574, 191396, 256343, 896096, 547289, 282072, 441389, 66374, 166389, 675025, 786313, 699727, 32304, 620610, 432108, 888630, 861662, 976289, 750673, 468552, 708193, 483049, 395235, 240598}
		};
		SortTestCase[] arraySet = new SortTestCase[8];
		for(int i = 0 ; i<arraySet.length; i++){
			//printTestArray(testArrSet[i]);
			arraySet[i] = createCaseFromArray(testArrSet[i]);
		}
		return  arraySet;
	}
		
	private void printTestArray(Integer[] testArr) {
		System.out.println("------------------------------------------ Test Array: ");
		for (int i = 0 ; i< testArr.length; i++ ){
			System.out.print(testArr[i] + ", ");
		}
		System.out.println("\n------------------------------------------ Test Array: ");
	}

	private SortTestCase createCaseFromArray(Integer[] testArr){
		//System.out.println("Creating test " + arrayPrinter(testArr));
				Integer[] ansArray = testArr.clone();
				sampleCall(ansArray, ansArray.length); // sort the sucka
				//System.out.println("Sorted " + arrayPrinter(ansArray));
				SortTestCase aCase = new SortTestCase(new Object[]{ testArr, (Integer)testArr.length}, ansArray);
				return aCase;
	}
	
	String arrayPrinter(Integer[] iA){
		String ret = " ";
		for (int i = 0 ; i< iA.length; i++){
			ret+= " "+ iA[i];
		}
		return ret;
	}
	
	public void setProblemName(String problemName) {
		this.problemName = problemName;
	}

	public String getProblemName() {
		return problemName;
	}

	private Integer bestFunctionalityScore = null;
	public int getSeedFunctionalityScore() { // this is the best we know of, but whats the worst as per functionality score?
		if( bestFunctionalityScore == null){
			bestFunctionalityScore=0;
			for(int i = 0 ; i< testData.length ; i++)
				bestFunctionalityScore += ((Integer[]) testData[i].getAnswer()).length;
		}
		return bestFunctionalityScore;
	}
	
	public int getWorstFunctionalityScore(){
		if (worstFunctionalityScore == null){
				worstFunctionalityScore =getSeedFunctionalityScore() *3;
		}
		return worstFunctionalityScore;
	}

	public Class[] getClassParams() {
		return new Class[] {Integer[].class, Integer.class};
	}

	@Override
	public void setStaticOptimalBias(Individual individual, int optimisationType) {
		// how can we let the individual set its own bias from a generic description as contained in the problem? 
		// you figure out a better way!
		
		individual.setGPDataNodesToZero();	// sets any existing nodes = 0
		// Make sure new nodes are set to 0 when static bias is in use
		GPASTNodeData.setGPASTNodeInitialBias(0); // specifies any new nodes = 0 
		
		if(optimisationType ==1){
			
			setBiasDownTree(individual, "i++",1 );
		}else if(optimisationType==2){
			setBiasDownTree(individual, "length - 1",1 );
		}else if(optimisationType==3){
			setProfilerBias(individual);
		}else if(optimisationType==4){
			setBiasbyNodeNumber(individual);
		}else
			System.exit(1);
	}

	private void setProfilerBias(Individual individual) {
		individual.setGPDataNodesToZero();
		// from a number of calls to instrumented bubblesort, we have the following
				
		/*
	|"for (int i=0; i < length; i++) {"      |284       .05              
	|"for (int j=0; j < length - 1; j++) {"  |5894  	1
	|"if (a[j].compareTo(a[j + 1])<0) {"     |5630		.95
	|"int k=a[j];"                           |793		.15
	|"a[j]=a[j + 1];"                        |793
	|"a[j + 1]=k;"                           |793  
		 */
		
		setBiasContains(individual, "if (a[j] > a[j + 1])", .95);
		setBiasDownTree(individual, "a[j] > a[j + 1]", .95);
		
		setBiasContains(individual, "for (int j=0; j < length - 1; j++)", 1);
		setBiasDownTree(individual, "int j=0", 1);
		setBiasDownTree(individual, "j < length - 1", 1);
		setBiasDownTree(individual, "j++", 1);
		
		setBiasContains(individual, "for (int i=0; i < length; i++)", .05);
		setBiasDownTree(individual, "int i=0", .05);
		setBiasDownTree(individual, "i < length", .05);
		setBiasDownTree(individual, "i++", .05);
		
		setBiasDownTree(individual, "int k=a[j]", .15);
		setBiasDownTree(individual, "a[j]=a[j + 1]", .15);
		setBiasDownTree(individual, "a[j + 1]=k", .15);	
		
	}

	private void setBiasContains(Individual individual, String biasString, double newNodeVal) {
		ASTNode tempNode;
		GPASTNodeData tempData =null;
					
		for (Iterator<ASTNode> iter = individual.gpMaterial.getAllNodes()
				.iterator(); iter.hasNext();) {
			tempNode = iter.next();
			if (tempNode.toString().trim().contains(biasString)) {
				tempData = (GPASTNodeData)tempNode.getProperty("gpdata");
				tempData.setProbabilityVal(newNodeVal);
				//tempNode.setProbabilityVal(newNodeVal);
				//tempNode.accept(new gpDataSetterVisitor(newNodeVal));
			}

		}
				
	}
	
	private void setBiasbyNodeNumber(Individual individual) {
		ASTNode tempNode;
		/* 
		 * We got these values by running biasAccumulator with R15tiny from GP114
		 */
		
		//GPASTNodeData tempData =null;
		double[] NodeVals = {0,0.920865,0.921351,0.919202,0.918849,0.917408,0.926602,0.923221,0.922238,0.942054,0.923594,0.920286,0.916529,0.939287,0.914065,0.913459,0.917401,0.939547,0.916287,0.914073,0.916139,0.915849,0.915054,0.91798,0.916346,0.917204,0.940164,0.918658,0.920887,0.917949,0.918934,0.921169,0.917115,0.918134,0.918873,0.918354,0.939187,0.916511,0.913347,0.917689,0.920663,0.918266,0.919975,0.917664,0.92072,0.921573,0.919057,0.919381,0.922172,0.91738,0.916938,0.91711,0.918226,0.915924,0.91863,0.91945,0.916264,0.917116,0.917846,0.918028,0.918483,0.91853};
		int nodeNum=0;
					
		for (Iterator<ASTNode> iter = individual.gpMaterial.getAllNodes()
				.iterator(); iter.hasNext();) {
			tempNode = iter.next();
			tempNode.accept(new gpDataSetterVisitor(NodeVals[nodeNum]));
			
			//System.out.println("Val: "+NodeVals[nodeNum]+" Node: "+nodeNum + " Str: "+tempNode.toString());
			nodeNum++;
		}
				
	}
	
	private void setBiasDownTree(Individual individual, String biasString, double newNodeVal) {
		ASTNode tempNode;
		//GPASTNodeData tempData =null;
					
		for (Iterator<ASTNode> iter = individual.gpMaterial.getAllNodes()
				.iterator(); iter.hasNext();) {
			tempNode = iter.next();
			if (tempNode.toString().trim().contentEquals(biasString)) {
				tempNode.accept(new gpDataSetterVisitor(newNodeVal));
			}

		}
				
	}

	@Override
	public ArrayList<String> getClassNames() {
		return getStrings().getClassNames();
	}

}
