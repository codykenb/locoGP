package de.uka.ipd.sdq.ByCounter.reporting;

import de.uka.ipd.sdq.ByCounter.execution.CountingResultBase;
import de.uka.ipd.sdq.ByCounter.execution.CountingResultCollector;
import de.uka.ipd.sdq.ByCounter.results.CountingResult;

/**
 * Classes implementing this interface can be used with {@link CountingResultCollector}
 * to process and report ByCounter results. Instances of implementing classess 
 * can be added to the list of used result writers using 
 * {@link CountingResultCollector#registerWriter(ICountingResultWriter)}. All
 * result writers registered in this way
 * will then be used for calls to 
 * {@link CountingResult#logResult(boolean, boolean)}.
 * @author Martin Krogmann
 * @author Michael Kuperberg
 * @since 0.1
 * @version 1.2
 */
public interface ICountingResultWriter {
	/** 
	 * @param cr CountingResult to write
	 * @param usePrevTimestamp TODO explain
	 * @param prevTimestampToUse
	 * @return timestamp that is part of the file name 
	 * (if usePrevTimestamp==false, 
	 * the returned timestamp is internally generated by this method)
	 */
	public long writeResultToFile(CountingResultBase cr,
			boolean usePrevTimestamp,
			long prevTimestampToUse);
}
